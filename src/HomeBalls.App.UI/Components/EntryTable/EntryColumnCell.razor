@using static HomeBallsEntryObtainedStatus
@using static HomeBallsEntryLegalityStatus
@inject IHomeBallsDataSource DataSource

@if (IsBallShown)
{
    @if (Cell.LegalityStatus == NotObtainable)
    {
        <td class="bg-theme-secondary-200 hover:bg-theme-secondary-300 dark:bg-theme-secondary-800 dark:hover:bg-theme-secondary-700">
            <EntryColumnCellBallSprite
                Ball="@Ball"
                IsObtained="@IsObtained"
                IsLegal="@IsLegal"
                ShowIllegalEntries="@ShowIllegalEntries" />
        </td>
    }

    else if (Cell.LegalityStatus == ObtainableWithoutHiddenAbility)
    {
        <td class="bg-theme-primary-200 hover:bg-theme-primary-300 dark:bg-theme-primary-800 dark:hover:bg-theme-primary-700">
            <EntryColumnCellBallSprite
                Ball="@Ball"
                IsObtained="@IsObtained"
                IsLegal="@IsLegal"
                ShowIllegalEntries="@ShowIllegalEntries" />
        </td>
    }

    else if (Cell.LegalityStatus == ObtainableWithHiddenAbility)
    {
        <td class="hover:bg-theme-primary-300 dark:hover:bg-theme-primary-700">
            <EntryColumnCellBallSprite
                Ball="@Ball"
                IsObtained="@IsObtained"
                IsLegal="@IsLegal"
                ShowIllegalEntries="@ShowIllegalEntries" />
        </td>
    }
}

@code {
    IHomeBallsEntryCell? _cell;

    [Parameter, EditorRequired]
    public IHomeBallsEntryCell Cell { get => _cell!; init => _cell = value; }

    IHomeBallsItem Ball => DataSource.Items[Cell.BallId];

    Boolean IsBallShown => Ball.CategoryId == 39 || Ball.Id == 5 || Ball.Id > 456;

    Boolean IsObtained =>
        Cell.ObtainedStatus == ObtainedWithHiddenAbility ||
        Cell.ObtainedStatus == ObtainedWithoutHiddenAbility;

    Boolean IsLegal =>
        Cell.LegalityStatus == ObtainableWithHiddenAbility ||
        Cell.LegalityStatus == ObtainableWithoutHiddenAbility;

    Boolean ShowIllegalEntries => true;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Cell.PropertyChanged += OnCellPropertyChanged;
    }

    protected virtual void OnCellPropertyChanged(
        Object? sender,
        HomeBallsPropertyChangedEventArgs e)
    {
        if (IsLegal || ShowIllegalEntries) StateHasChanged();
    }
}