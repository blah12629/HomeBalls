@using static HomeBallsEntryObtainedStatus
@inject IHomeBallsDataSource DataSource

@if (IsBallShown)
{
    @if (Cell.ObtainedStatus == NotObtained)
    {
        <td class="pt-0.75 cursor-pointer hover:bg-dream hover:bg-opacity-50" />
    }
    @if (Cell.ObtainedStatus == ObtainedWithoutHiddenAbility)
    {
        <td class="pt-0.75 cursor-pointer grayscale hover:bg-dream hover:bg-opacity-50">
            <BallSprite Ball="@Ball" />
        </td>
    }
    else if (Cell.ObtainedStatus == ObtainedWithHiddenAbility)
    {
        <td class="pt-0.75 cursor-pointer hover:bg-dream hover:bg-opacity-50">
            <BallSprite Ball="@Ball" />
        </td>
    }
}

@code {
    IHomeBallsEntryCell? _cell;

    [Parameter, EditorRequired]
    public IHomeBallsEntryCell Cell { get => _cell!; init => _cell = value; }

    IHomeBallsItem Ball => DataSource.Items[Cell.BallId];

    Boolean IsBallShown => Ball.CategoryId == 39 || Ball.Id == 5 || Ball.Id > 456;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Cell.PropertyChanged += (sender, e) => StateHasChanged();
    }
}