@inherits HomeBallsComponentBase
@inject IHomeBallsLoadableDataSource Data
@inject IHomeBallsBreedablesSpriteService SpriteService
@inject IHomeBallsBreedablesFormIdentifierService IdentifierService

<td class="sticky left-0.5 bg-theme-secondary-200 dark:bg-theme-secondary-800 group-hover:bg-theme-accent-300 dark:group-hover:bg-theme-accent-700">
    <center>
        <span class="hidden sm:table-cell">
            <img src="@SpriteUrl" class="object-contain w-4/5">
        </span>
    </center>
</td>

<td class="sticky left-1 sm:left-[58px] text-right bg-theme-secondary-200 dark:bg-theme-secondary-800 group-hover:bg-theme-accent-300 dark:group-hover:bg-theme-accent-700 overflow-ellipsis whitespace-nowrap">
    <span class="text-xs">@Column.Id.SpeciesId &nbsp;</span>
</td>

<td class="sticky left-9 sm:left-[88px] bg-theme-secondary-200 dark:bg-theme-secondary-800 text-0 group-hover:bg-theme-accent-300 dark:group-hover:bg-theme-accent-700">
    @if (Species == default)
    {
        <span class="text-xs">@Form.Identifier</span>
    }

    else
    {
        <span class="text-xs font-semibold">@SpeciesName</span>

        @if (FormIdentifier != String.Empty)
        {
            <span class="text-xs">&nbsp; @FormIdentifier</span>
        }
    }
</td>

@code {
    IHomeBallsEntryColumn? _column;
    IHomeBallsPokemonForm? _form;

    [Parameter, EditorRequired]
    public IHomeBallsEntryColumn Column { get => _column!; init => _column = value; }

    IHomeBallsPokemonForm Form => _form ??= Data.PokemonForms[Column.Id];

    IHomeBallsPokemonSpecies? Species =>
        Data.PokemonSpecies.TryGetValue(Column.Id.SpeciesId, out var value) ?
            value :
            default;

    String SpriteUrl => SpriteService
        .GetSerebiiSpriteUri(Form)
        .ToString();

    String? SpeciesName => Species?.Names
        .Single(name => name.LanguageId == 9)
        .Value;

    String? FormIdentifier => IdentifierService.GetIdentifier(Form);

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Data.PokemonSpecies.DataLoaded += OnSpeciesLoaded;
    }

    protected virtual void OnSpeciesLoaded(
        Object? sender,
        TimedActionEndedEventArgs e) =>
        StateHasChanged();
}