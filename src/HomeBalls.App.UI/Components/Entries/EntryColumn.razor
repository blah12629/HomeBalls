@inherits HomeBallsComponentBase
@inject IHomeBallsDataSource Data
@inject IHomeBallsEntryTable Table
@inject IHomeBallsBreedablesSpriteService Sprites

@if (Index < Table.Columns.Count)
{
    <tr class="cursor-pointer group" id="@Identifier">
        <td class="sticky left-0 h-6.5 bg-theme-secondary-200 dark:bg-theme-secondary-800 group-hover:bg-theme-accent-300 dark:group-hover:bg-theme-accent-700" />

        <td class="sticky left-0.5 bg-theme-secondary-200 dark:bg-theme-secondary-800 group-hover:bg-theme-accent-300 dark:group-hover:bg-theme-accent-700">
            <center>
                <span class="hidden sm:table-cell">
                    <img src="@SpriteUrl" class="object-contain w-4/5">
                </span>
            </center>
        </td>

        <td class="sticky left-1 sm:left-[58px] text-right bg-theme-secondary-200 dark:bg-theme-secondary-800 group-hover:bg-theme-accent-300 dark:group-hover:bg-theme-accent-700 overflow-ellipsis whitespace-nowrap">
            <span class="text-xs">@Column.Id.SpeciesId &nbsp;</span>
        </td>

        <td class="sticky left-9 sm:left-[88px] bg-theme-secondary-200 dark:bg-theme-secondary-800 text-0 group-hover:bg-theme-accent-300 dark:group-hover:bg-theme-accent-700">
            <EntryColumnIdentifier Form="@Form" />
        </td>

        @foreach (var cell in Column.Cells)
        {
            <EntryColumnCell Cell="@cell" />
        }

        <td class="text-0" />
    </tr>

    <EntryColumn Index="@(Index + 1)" />
}

@code {
    IHomeBallsEntryColumn? _column;
    String? _identifier;
    IHomeBallsPokemonForm? _form;
    String? _spriteUrl;

    [Parameter, EditorRequired]
    public Int32 Index { get; init; }

    protected virtual IHomeBallsEntryColumn Column => _column ??= Table.Columns[Index];

    protected virtual String Identifier => _identifier ??= Column.Identifier;

    protected virtual IHomeBallsPokemonForm Form => _form ??= Data.PokemonForms[Column.Id];

    protected virtual String SpriteUrl => _spriteUrl ??= Sprites.GetSerebiiSpriteUri(Form).ToString();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Table.Columns.CollectionChanged += OnColumnsChanged;
    }

    protected virtual void OnColumnsChanged(
        Object? sender,
        NotifyCollectionChangedEventArgs e)
    {
        if (Table.Columns.Count - 1 == Index) StateHasChanged();
    }
        
}