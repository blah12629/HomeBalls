@inherits HomeBallsEntriesComponentBase

@if (Container != default) { @Container(new(ContainerId, Content, HiddenContainer)); }

@code
{
    String? _containerId;
    RenderFragment? _hiddenContainer;

    public record ContainerParameters(
        String ContainerId,
        RenderFragment? Content,
        RenderFragment HiddenContainer);

    public delegate Task OnInitializedTaskDelegate(Action rerenderAction);

    public delegate Task OnAfterRenderTaskDelegate(String containerId);

    [Parameter]
    public RenderFragment<ContainerParameters>? Container { get; init; }

    [Parameter]
    public RenderFragment? Content { get; init; }

    [Parameter]
    public OnInitializedTaskDelegate? OnInitializedTask { get; init; }

    [Parameter]
    public OnAfterRenderTaskDelegate? OnAfterRenderTask { get; init; }

    protected virtual String ContainerId => _containerId ??= $"entries-{Id}";

    protected virtual RenderFragment HiddenContainer => _hiddenContainer ??= __builder =>
    {
        <td id="@ContainerId" class="hidden" />
    };

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        if (OnInitializedTask != default) await OnInitializedTask(StateHasChanged);
    }

    protected override async Task OnAfterRenderAsync(Boolean firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (OnAfterRenderTask != default) await OnAfterRenderTask(ContainerId);
    }
}