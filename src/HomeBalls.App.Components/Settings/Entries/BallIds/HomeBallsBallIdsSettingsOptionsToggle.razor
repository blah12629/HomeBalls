@inherits HomeBallsBallIdsSettingsComponentBase

<button onclick="@OnToggleClicked" class="group m-0.5 w-6 h-6 overflow-hidden rounded-md bg-theme-white-500 hover:bg-theme-primary-100 active:bg-theme-primary-100 lg:w-7 lg:h-7">
    @if (IsSelected)
    {
        <img src="@SpriteUrl" class="inline-block object-contain w-6 h-6" loading="lazy" />
    }

    else
    {
        <img src="@SpriteUrl" class="grayscale inline-block object-contain w-6 h-6 opacity-60 group-hover:opacity-100 group-active:opacity-100" loading="lazy" />
    }
</button>

@code
{
    IHomeBallsItem? _ball;

    [Parameter, EditorRequired]
    public virtual IHomeBallsItem Ball
    {
        get => _ball ?? throw new NullReferenceException();
        init => _ball = value;
    }

    protected virtual Boolean IsSelected => Settings.Collection.Contains(Ball.Id);

    protected virtual Uri SpriteUrl => Sprites.GetBallSpriteUri(Ball);

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Settings.Collection.CollectionChanged += OnSettingsChanged;
    }

    protected virtual void OnSettingsChanged(
        Object? sender,
        NotifyCollectionChangedEventArgs e)
    {
        if (e.IsChanged(Ball.Id)) StateHasChanged();
    }

    protected virtual void OnToggleClicked(MouseEventArgs e)
    {
        if (IsSelected) Settings.Collection.Remove(Ball.Id);
        else Settings.Collection.Add(Ball.Id);
    }
}